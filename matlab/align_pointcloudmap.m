% Align coloradar sequence merged maps by ICP
% The sequence maps were generated by aggregating the downsampled point
% clouds with ground truth poses, see pointcloud_merge.py.
close all;

datadir = '/media/jhuai/BackupPlus/jhuai/data/coloradar/align_coloradar';

seqnames = {'edgar_classroom_run', 'ec_hallways_run', 'arpg_lab_run', ...
            'outdoors_run', 'aspen_run', 'edgar_army_run', 'longboard_run'};
refids = [0, 0, 0, 0, 0, 0, 0];
seqids = {1:15, 1:15, 1:15. 1:15, 1:15, 1:15, 1:15};

% hard failed sequences
% seqnames = {'edgar_classroom_run', 'ec_hallways_run', 'outdoors_run', 'edgar_army_run', 'longboard_run'};
% refids = [0, 0, 0, 0, 0];
% seqids = {[3], [1,2,3], [1,3,7,8], [1, 3], 1:7};

v = ver('MATLAB');
for s = 1:numel(seqnames)
    seqname = seqnames{s};
    basepcd = [datadir, '/', seqname, num2str(refids(s)), '/mergedmap.pcd'];
    fixed = pcread(basepcd);
    maxNumPoints = 12;
    outputlog = [datadir, '/', seqname, num2str(refids(s)), '/icp.log'];
    logid = fopen(outputlog, 'w');
    fixedDownsampled = pcdownsample(fixed,"nonuniformGridSample",maxNumPoints);
    fprintf(logid, 'fixed points %d after downsample %d\n', size(fixed.Location, 1), size(fixedDownsampled.Location, 1));

    for i=seqids{s}
        querypcd = [datadir, '/', seqname, num2str(i), '/mergedmap.pcd'];
        if ~isfile(querypcd)
            continue;
        end

        fprintf('Registering %s\n', querypcd);
        fprintf(logid, 'Registering %s to %s\n', querypcd, basepcd);
        moving = pcread(querypcd);
        movingDownsampled = pcdownsample(moving,"nonuniformGridSample",maxNumPoints);

        fprintf(logid, 'moving points %d after downsample %d\n', size(moving.Location, 1), size(movingDownsampled.Location, 1));
        [tform, movingAligned, rmse] = pcregistericp(movingDownsampled,fixedDownsampled, ...
            'Metric','pointToPoint','Extrapolate',true, 'InlierRatio', 0.9);
        ptCloudAligned = pctransform(moving,tform);
        % figure;
        % pcshowpair(ptCloudAligned, fixed);
        % title([num2str(i), ' to ', num2str(refids(s)), ' ', seqname], 'Interpreter', 'none');

        if v.Release=="(R2023a)"
            fix_T_moving = tform.A;
        elseif v.Release=="(R2022a)"
            fix_T_moving = [tform.Rotation', tform.Translation'];
        elseif v.Release=="(R2021a)"
            fix_T_moving = [tform.Rotation, tform.Translation'];
        else
            fprintf('Unrecognized matlab release %s. Fall back to R2021a.\n', v.Release);
            fix_T_moving = [tform.Rotation, tform.Translation'];
        end

        fprintf(logid, 'Rmse %.3f, pose of the moving point cloud is:\n', rmse);
        fprintf(logid, '%.9f %.9f %.9f %.9f\n', fix_T_moving');

        outputfile = [datadir, '/', seqname, num2str(i), '/W', num2str(refids(s)), '_T_Wi.txt'];
        write_transform(fix_T_moving, outputfile);
    end
    fclose(logid);
end
